# install helm from provided URL, it should be always tar.gz file
.gatsbyDeploy-installHelm: &gatsbyDeploy-installHelm |
  wget "${HELM_BINARIES_URL}" -O helm.tar.gz > /dev/null 2>&1
  tar -xvf helm.tar.gz linux-amd64/helm
  mv linux-amd64/helm /usr/local/bin
  rm -rf helm.tar.gz
  rm -rf linux-amd64
  helm init --client-only

# activate GCP service account
.gatsbyDeploy-initializeGcpAuth: &gatsbyDeploy-initializeGcpAuth |
  echo "${GCLOUD_SA_KEY}" | base64 -d > /tmp/key.json
  gcloud auth activate-service-account --key-file=/tmp/key.json

# add private chart museum
.gatsbyDeploy-initializeChartMuseum: &gatsbyDeploy-initializeChartMuseum |
  if [ "${HELM_USE_PRIVATE_REPOSITORY}" = "true" ]; then
    helm plugin install https://github.com/chartmuseum/helm-push
    helm repo add \
      --username "${HELM_REPOSITORY_USERNAME}" \
      --password "${HELM_REPOSITORY_PASSWORD}" \
      "${HELM_REPOSITORY_NAME}" \
      "${HELM_REPOSITORY_URL}"
  else
    echo "skipping private Helm repository initialization"
  fi

# install Gcloud component - Kubectl
.gatsbyDeploy-installKubectl: &gatsbyDeploy-installKubectl |
  gcloud components install kubectl -q > /dev/null 2>&1

# get GKE cluster credentials
.gatsbyDeploy-initializeGkeAuth: &gatsbyDeploy-initializeGkeAuth |
  gcloud container clusters get-credentials "${GKE_CLUSTER}" \
    --project="${GCLOUD_PROJECT_ID}" \
    --zone="${GKE_ZONE}"

# set optional values to default values
.gatsbyDeploy-setDefaultValues: &gatsbyDeploy-setDefaultValues |
   if [ -z "${HELM_CHART_VERSION}" ]; then export HELM_CHART_VERSION=""; fi
   if [ -z "${HELM_FORCE_UPGRADE}" ]; then export HELM_FORCE_UPGRADE="false"; fi
   if [ -z "${HELM_USE_PRIVATE_REPOSITORY}" ]; then export HELM_USE_PRIVATE_REPOSITORY="true"; fi

.gatsbyDeploy-validateEnvironmentCommon: &gatsbyDeploy-validateEnvironmentCommon |
  if [ -z "${GCLOUD_SA_KEY}" ]; then echo "GCLOUD_SA_KEY is required"; exit 1; fi
  if [ -z "${GCLOUD_PROJECT_ID}" ]; then echo "GCLOUD_PROJECT_ID is required"; exit 1; fi
  if [ -z "${GKE_CLUSTER}" ]; then echo "GKE_CLUSTER is required"; exit 1; fi
  if [ -z "${GKE_ZONE}" ]; then echo "GKE_CLUSTER is required"; exit 1; fi
  if [ -z "${GKE_NAMESPACE}" ]; then echo "GKE_NAMESPACE is required"; exit 1; fi
  if [ -z "${HELM_BINARIES_URL}" ]; then echo "HELM_BINARIES_URL is required"; exit 1; fi
  if [ -z "${HELM_REPOSITORY_URL}" ]; then echo "HELM_REPOSITORY_URL is required"; exit 1; fi
  if [ -z "${HELM_REPOSITORY_NAME}" ]; then echo "HELM_REPOSITORY_NAME is required"; exit 1; fi
  if [ -z "${HELM_REPOSITORY_USERNAME}" ]; then echo "HELM_REPOSITORY_USERNAME is required"; exit 1; fi
  if [ -z "${HELM_REPOSITORY_PASSWORD}" ]; then echo "HELM_REPOSITORY_PASSWORD is required"; exit 1; fi
  if [ -z "${HELM_RELEASE_NAME}" ]; then echo "HELM_RELEASE_NAME is required"; exit 1; fi
  if [ -z "${HELM_CHART_NAME}" ]; then echo "HELM_CHART_NAME is required"; exit 1; fi
  if [ -z "${HELM_VALUES_FILE}" ]; then echo "HELM_VALUES_FILE is required"; exit 1; fi
  if [ -z "${IMAGE_NAME}" ]; then echo "IMAGE_NAME is required"; exit 1; fi
  if [ -z "${IMAGE_TAG}" ]; then echo "IMAGE_TAG is required"; exit 1; fi
  if [ -z "${APP_NAME}" ]; then echo "APP_NAME is required"; exit 1; fi
  if [ -z "${PROJECT_NAME}" ]; then echo "PROJECT_NAME is required"; exit 1; fi
  if [ -z "${RUNTIME_ENVIRONMENT}" ]; then echo "RUNTIME_ENVIRONMENT is required"; exit 1; fi

.gatsbyDeploy-helmDeploy: &gatsbyDeploy-helmDeploy |
  helm upgrade \
    --install \
    --values="${HELM_VALUES_FILE}" \
    --set="general.imageName=${IMAGE_NAME}" \
    --set="general.imageTag=${IMAGE_TAG}" \
    --set="general.appName=${APP_NAME}" \
    --set="general.projectName=${PROJECT_NAME}" \
    --set="general.environment=${RUNTIME_ENVIRONMENT}" \
    --set="general.meta.buildHash=${CI_COMMIT_SHORT_SHA}" \
    --set="general.meta.branch=${CI_COMMIT_REF_NAME}" \
    --set="general.meta.repositoryUrl=${CI_PROJECT_URL}" \
    --set="general.gcpProjectId=${GCLOUD_PROJECT_ID}" \
    --version="${HELM_CHART_VERSION}" \
    --force="${HELM_FORCE_UPGRADE}" \
    --namespace="${GKE_NAMESPACE}" \
    "${HELM_RELEASE_NAME}" \
    "${HELM_CHART_NAME}"

.gatsbyDeployGke:
  stage: deploy
  image: google/cloud-sdk:242.0.0-alpine
  environment: ${RUNTIME_ENVIRONMENT}
  before_script:
    - *gatsbyDeploy-validateEnvironmentCommon
    - *gatsbyDeploy-setDefaultValues
    - *gatsbyDeploy-installHelm
    - *gatsbyDeploy-initializeChartMuseum
    - *gatsbyDeploy-initializeGcpAuth
    - *gatsbyDeploy-initializeGkeAuth
  script:
    - *gatsbyDeploy-helmDeploy

.gatsbyDeployGkeMaster:
  extends: .gatsbyDeployGke
  only:
    refs: ["master"]
    variables:
      - $CI_PIPELINE_SOURCE == "push"
