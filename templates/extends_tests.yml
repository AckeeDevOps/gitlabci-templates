# both before_script sections require following variables
# NPM specific variables:
#   SSH_KEY: base64-encoded private RSA key

.beforeScriptTestWithVaultier: &preTestWithVaultier
  - mkdir ~/.ssh/
  - echo ${SSH_KEY} | base64 -d > ~/.ssh/id_rsa
  - chmod 0400 ~/.ssh/id_rsa
  - eval `ssh-agent -s` && ssh-add ~/.ssh/id_rsa
  - wget ${VAULTIER_RELEASE_LINK} -O /usr/local/bin/vaultier
  - chmod +x /usr/local/bin/vaultier
  - vaultier
  - npm set unsafe-perm true
  
.BeforeScriptTestWithoutVaultier: &preTestWithoutVaultier
  - mkdir ~/.ssh/
  - echo ${SSH_KEY} | base64 -d > ~/.ssh/id_rsa
  - chmod 0400 ~/.ssh/id_rsa
  - eval `ssh-agent -s` && ssh-add ~/.ssh/id_rsa
  - npm set unsafe-perm true

.ciTestNoSecrets:
  image: node:10.14.2
  stage: test
  before_script: *preTestWithoutVaultier
  script:
    - npm install
    - npm run ci-test
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "merge_request"
      - $CI_PIPELINE_SOURCE == "push"
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    reports:
      junit: junit.xml

# .ciTestSecrets requires following variables
# Vaultier specific variables:
#   PLUGIN_VAULT_ADDR: https://vault.co.uk
#   PLUGIN_VAULT_TOKEN: sgsdfgdfghfsggdsfg
#   PLUGIN_BRANCH: ${CI_COMMIT_REF_NAME}
#   PLUGIN_SECRET_SPECS_PATH: secrets.yaml
#   PLUGIN_RUN_CAUSE: test
#   PLUGIN_OUTPUT_FORMAT: dotenv
#   PLUGIN_SECRET_OUTPUT_PATH: .env
# before_script specific varialbes:
#   VAULTIER_RELEASE_LINK: https://github.com/vranystepan/vaultier/releases/download/v0.0.4/vaultier-v0.0.4
      
.ciTestSecrets:
  image: node:10.14.2
  stage: test
  before_script: *preTestWithVaultier
  script:
    - vaultier
    - npm install
    - npm run ci-test
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "merge_request"
      - $CI_PIPELINE_SOURCE == "push"
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    reports:
      junit: junit.xml
      
.ciLint:
  image: node:10.14.2
  stage: test
  variables:
  before_script: *preTestWithoutVaultier
  script:
    - npm install
    - npm run ci-lint
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "merge_request"
      - $CI_PIPELINE_SOURCE == "push"
  allow_failure: true
  artifacts:
    reports:
      junit: lint.xml
