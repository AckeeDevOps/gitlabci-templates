.deployScriptSecrets: &deployScriptSecrets
  - wget https://raw.githubusercontent.com/AckeeDevOps/gitlabci-templates/master/scripts/helm_deploy_secrets.sh -O /usr/local/bin/helm-deploy
  - chmod +x /usr/local/bin/helm-deploy
  - gke-init
  - vaultier
  # see helm-deploy: https://github.com/AckeeDevOps/gitlabci-templates/blob/master/scripts/helm_deploy_secrets.sh
  - helm-deploy
    
.deployBranchMasterSecrets:
  image: ${HELMER_IMAGE}                                          # <- specify on the top of your .gitlab-ci.yml file
  stage: deploy
  variables:
    GCLOUD_SA_KEY: ${GCLOUD_SA_KEY}                               # <- specify on the top of your .gitlab-ci.yml file
    GCLOUD_PROJECT_ID: ${GCLOUD_PROJECT_ID_PRODUCTION}            # <- specify on the top of your .gitlab-ci.yml file
    GCLOUD_GKE_CLUSTER_NAME: ${GCLOUD_GKE_CLUSTER_PRODUCTION}     # <- specify on the top of your .gitlab-ci.yml file
    GCLOUD_GKE_ZONE: ${GCLOUD_GKE_ZONE_PRODUCTION}                # <- specify on the top of your .gitlab-ci.yml file
    GCLOUD_GKE_NAMESPACE: ${GCLOUD_GKE_NAMESPACE_PRODUCTION}      # <- specify on the top of your .gitlab-ci.yml file
    VAULTIER_BRANCH: ${VAULTIER_BRANCH}                           # <- specify on the top of your .gitlab-ci.yml file
    VAULTIER_VAULT_ADDR: ${VAULTIER_VAULT_ADDR}                   # <- specify on the top of your .gitlab-ci.yml file
    VAULTIER_VAULT_TOKEN: ${VAULTIER_VAULT_TOKEN}                 # <- specify on the top of your .gitlab-ci.yml file
    VAULTIER_RUN_CAUSE: delivery
    VAULTIER_OUTPUT_FORMAT: helm
    VAULTIER_SECRET_OUTPUT_PATH: /tmp/secrets.json
  script: *deployScriptSecrets
  allow_failure: false # important for manual jobs
  only:
    refs: ["master"]
    variables:
      - $CI_PIPELINE_SOURCE == "push"
  environment:
    name: production
  when: manual
    
.deployBranchDevelopmentSecrets:
  image: ${HELMER_IMAGE}                                          # <- specify on the top of your .gitlab-ci.yml file
  stage: deploy
  variables:
    GCLOUD_SA_KEY: ${GCLOUD_SA_KEY}
    GCLOUD_PROJECT_ID: ${GCLOUD_PROJECT_ID_DEVELOPMENT}           # <- specify on the top of your .gitlab-ci.yml file
    GCLOUD_GKE_CLUSTER_NAME: ${GCLOUD_GKE_CLUSTER_DEVELOPMENT}    # <- specify on the top of your .gitlab-ci.yml file
    GCLOUD_GKE_ZONE: ${GCLOUD_GKE_ZONE_DEVELOPMENT}               # <- specify on the top of your .gitlab-ci.yml file
    GCLOUD_GKE_NAMESPACE: ${GCLOUD_GKE_NAMESPACE_DEVELOPMENT}     # <- specify on the top of your .gitlab-ci.yml file
    VAULTIER_BRANCH: ${VAULTIER_BRANCH}                           # <- specify on the top of your .gitlab-ci.yml file
    VAULTIER_VAULT_ADDR: ${VAULTIER_VAULT_ADDR}                   # <- specify on the top of your .gitlab-ci.yml file
    VAULTIER_VAULT_TOKEN: ${VAULTIER_VAULT_TOKEN}                 # <- specify on the top of your .gitlab-ci.yml file
    VAULTIER_RUN_CAUSE: delivery
    VAULTIER_OUTPUT_FORMAT: helm
    VAULTIER_SECRET_OUTPUT_PATH: /tmp/secrets.json
  script: *deployScriptSecrets
  allow_failure: false # important for manual jobs
  only:
    refs: ["development"]
    variables:
      - $CI_PIPELINE_SOURCE == "push"
  environment:
    name: development
    
.deployBranchStageSecrets:
  image: ${HELMER_IMAGE}                                          # <- specify on the top of your .gitlab-ci.yml file
  stage: deploy
  variables:
    GCLOUD_SA_KEY: ${GCLOUD_SA_KEY}                               # <- specify on the top of your .gitlab-ci.yml file
    GCLOUD_PROJECT_ID: ${GCLOUD_PROJECT_ID_STAGE}                 # <- specify on the top of your .gitlab-ci.yml file
    GCLOUD_GKE_CLUSTER_NAME: ${GCLOUD_GKE_CLUSTER_STAGE}          # <- specify on the top of your .gitlab-ci.yml file
    GCLOUD_GKE_ZONE: ${GCLOUD_GKE_ZONE_STAGE}                     # <- specify on the top of your .gitlab-ci.yml file
    GCLOUD_GKE_NAMESPACE: ${GCLOUD_GKE_NAMESPACE_STAGE}           # <- specify on the top of your .gitlab-ci.yml file
    VAULTIER_BRANCH: ${VAULTIER_BRANCH}                           # <- specify on the top of your .gitlab-ci.yml file
    VAULTIER_VAULT_ADDR: ${VAULTIER_VAULT_ADDR}                   # <- specify on the top of your .gitlab-ci.yml file
    VAULTIER_VAULT_TOKEN: ${VAULTIER_VAULT_TOKEN}                 # <- specify on the top of your .gitlab-ci.yml file
    VAULTIER_RUN_CAUSE: delivery
    VAULTIER_OUTPUT_FORMAT: helm
    VAULTIER_SECRET_OUTPUT_PATH: /tmp/secrets.json
  script: *deployScriptSecrets
  allow_failure: false # important for manual jobs
  only:
    refs: ["stage"]
    variables:
      - $CI_PIPELINE_SOURCE == "push"
  environment:
    name: development
