#  before_script anchors
.beforeScriptTestWithVaultier: &preTestWithVaultier
  #  fixed values for test
  - export VAULTIER_BRANCH=${CI_COMMIT_REF_NAME}
  - export CFG_JSON_PATH=${VAULTIER_SECRET_OUTPUT_PATH}
  - export VAULTIER_SECRET_SPECS_PATH=secrets.yaml
  - export VAULTIER_RUN_CAUSE=test
  - export VAULTIER_OUTPUT_FORMAT=dotenv
  - export VAULTIER_SECRET_OUTPUT_PATH=/tmp/secrets.json
  # /fixed values for test
  - mkdir ~/.ssh/
  - echo ${SSH_KEY} | base64 -d > ~/.ssh/id_rsa
  - chmod 0400 ~/.ssh/id_rsa
  - eval `ssh-agent -s` && ssh-add ~/.ssh/id_rsa
  - echo -e 'Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null' > ~/.ssh/config
  - wget ${VAULTIER_RELEASE_LINK} -O /usr/local/bin/vaultier > /dev/null 2>&1
  - chmod +x /usr/local/bin/vaultier
  - npm set unsafe-perm true
  - npm set progress=false
  - npm set loglevel=error
  - export JOBS=max
  - vaultier

.BeforeScriptTestWithoutVaultier: &preTestWithoutVaultier
  - mkdir ~/.ssh/
  - echo ${SSH_KEY} | base64 -d > ~/.ssh/id_rsa
  - chmod 0400 ~/.ssh/id_rsa
  - eval `ssh-agent -s` && ssh-add ~/.ssh/id_rsa
  - echo -e 'Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null' > ~/.ssh/config
  - npm set unsafe-perm true
  - npm set progress=false
  - npm set loglevel=error
  - export JOBS=max
# /before_script anchors

.ciTest:
  image: ${NODE_IMAGE}
  stage: test
  variables:
    # SSH_KEY: must be specified globally 
  script:
    - npm ci
    - npm run ci-test
  # coverage report for Jest output (--coverage flag)
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    reports:
      junit: junit.xml

.ciTestNoSecrets:
  extends: .ciTest
  before_script: *preTestWithoutVaultier

.ciTestSecrets:
  extends: .ciTest
  before_script: *preTestWithVaultier

.ciTestSecretsDelivery:
  extends: .ciTestSecrets
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "push"
    refs: ["master", "stage", "development"]

.ciTestSecretsMergeRequest:
  extends: .ciTestSecrets
  only: ["merge_requests"]
      
.ciLint:
  image: ${NODE_IMAGE}
  stage: test
  variables:
    #SSH_KEY: must be specified globally
  before_script: *preTestWithoutVaultier
  script:
    - npm ci
    - npm run ci-lint
  allow_failure: true
  artifacts:
    reports:
      junit: lint.xml

.ciLintDelivery:
  extends: .ciLint
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "push"
    refs: ["master", "stage", "development"]

.ciLintMergeRequest:
  extends: .ciLint
  only: ["merge_requests"]
