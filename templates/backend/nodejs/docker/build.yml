.buildScript: &buildScript
  - gcr-init
  - docker build --build-arg SSH_KEY --build-arg BUILD_IMAGE=${NODE_IMAGE} -t ${IMAGE_NAME}:${IMAGE_TAG} .
  - docker tag ${IMAGE_NAME}:${IMAGE_TAG} eu.gcr.io/${GCLOUD_PROJECT_ID}/${PROJECT_NAME}/${APP_NAME}:${IMAGE_TAG}
  - docker push eu.gcr.io/${GCLOUD_PROJECT_ID}/${PROJECT_NAME}/${APP_NAME}:${IMAGE_TAG}

.buildDockerBranch:
  image: ${DOCKER_GCR_IMAGE}
  stage: build
  script: *buildScript
  variables:
    #SSH_KEY: must be specified globally
    #GCLOUD_SA_KEY: must be specified globally
    #GCLOUD_PROJECT_ID: specify in the extension
    #IMAGE_NAME: must be specified globally
    #IMAGE_TAG: must be specified globally

.buildDockerBranchDevelopment:
  extends: .buildDockerBranch
  variables:
    GCLOUD_PROJECT_ID: "${GCLOUD_PROJECT_ID_DEVELOPMENT}"
  only:
    refs: ["development"]
    variables:
      - $CI_PIPELINE_SOURCE == "push"
      
.buildDockerBranchMaster:
  extends: .buildDockerBranch
  variables:
    GCLOUD_PROJECT_ID: "${GCLOUD_PROJECT_ID_PRODUCTION}"
  only:
    refs: ["master"]
    variables:
      - $CI_PIPELINE_SOURCE == "push"

.buildDockerBranchStage:
  extends: .buildDockerBranch
  variables:
    GCLOUD_PROJECT_ID: "${GCLOUD_PROJECT_ID_STAGE}"
  only:
    refs: ["stage"]
    variables:
      - $CI_PIPELINE_SOURCE == "push"
